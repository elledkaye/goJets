import { NgModule } from '@angular/core';
import { ProgressbarModule } from './progressbar.module';
import { MdProgressSpinnerModule } from './progress-spinner-module/index';
import { MdProgressBarModule } from './progress-bars-module/index';
import * as i0 from "@angular/core";
import * as i1 from "./progress-bars-module/index";
import * as i2 from "./progress-spinner-module/index";
import * as i3 from "./progressbar.module";
export { BarComponent } from './bar.component';
export { ProgressDirective } from './progress.directive';
export { ProgressbarComponent } from './progressbar.component';
export { ProgressbarModule } from './progressbar.module';
export { ProgressbarConfigComponent } from './progressbar.config.component';
export { ProgressSpinnerComponent } from './progress-spinner.component';
export * from './progress-bars-module/index';
export * from './progress-spinner-module/index';
const MATERIAL_MODULES = [MdProgressBarModule, MdProgressSpinnerModule, ProgressbarModule];
export class PreloadersModule {
}
PreloadersModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: PreloadersModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
PreloadersModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: PreloadersModule, imports: [i1.MdProgressBarModule, i2.MdProgressSpinnerModule, i3.ProgressbarModule], exports: [MdProgressBarModule, MdProgressSpinnerModule, ProgressbarModule] });
PreloadersModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: PreloadersModule, imports: [[
            MdProgressBarModule.forRoot(),
            MdProgressSpinnerModule.forRoot(),
            ProgressbarModule.forRoot(),
        ], MdProgressBarModule, MdProgressSpinnerModule, ProgressbarModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: PreloadersModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        MdProgressBarModule.forRoot(),
                        MdProgressSpinnerModule.forRoot(),
                        ProgressbarModule.forRoot(),
                    ],
                    exports: MATERIAL_MODULES,
                }]
        }] });
export class ProgressBars {
    static forRoot() {
        return { ngModule: PreloadersModule };
    }
}
ProgressBars.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: ProgressBars, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ProgressBars.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: ProgressBars, imports: [MdProgressBarModule, MdProgressSpinnerModule, ProgressbarModule], exports: [MdProgressBarModule, MdProgressSpinnerModule, ProgressbarModule] });
ProgressBars.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: ProgressBars, imports: [MATERIAL_MODULES, MdProgressBarModule, MdProgressSpinnerModule, ProgressbarModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: ProgressBars, decorators: [{
            type: NgModule,
            args: [{
                    imports: MATERIAL_MODULES,
                    exports: MATERIAL_MODULES,
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZy11aWtpdC1wcm8tc3RhbmRhcmQvc3JjL2xpYi9wcm8vcHJvZ3Jlc3NiYXJzL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQXVCLE1BQU0sZUFBZSxDQUFDO0FBUTlELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBS3pELE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQzFFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLDhCQUE4QixDQUFDOzs7OztBQVpuRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDekQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDL0QsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDekQsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDNUUsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFHeEUsY0FBYyw4QkFBOEIsQ0FBQztBQUM3QyxjQUFjLGlDQUFpQyxDQUFDO0FBS2hELE1BQU0sZ0JBQWdCLEdBQUcsQ0FBQyxtQkFBbUIsRUFBRSx1QkFBdUIsRUFBRSxpQkFBaUIsQ0FBQyxDQUFDO0FBVTNGLE1BQU0sT0FBTyxnQkFBZ0I7OzZHQUFoQixnQkFBZ0I7OEdBQWhCLGdCQUFnQixpR0FWSCxtQkFBbUIsRUFBRSx1QkFBdUIsRUFBRSxpQkFBaUI7OEdBVTVFLGdCQUFnQixZQVBsQjtZQUNQLG1CQUFtQixDQUFDLE9BQU8sRUFBRTtZQUM3Qix1QkFBdUIsQ0FBQyxPQUFPLEVBQUU7WUFDakMsaUJBQWlCLENBQUMsT0FBTyxFQUFFO1NBQzVCLEVBUHVCLG1CQUFtQixFQUFFLHVCQUF1QixFQUFFLGlCQUFpQjsyRkFVNUUsZ0JBQWdCO2tCQVI1QixRQUFRO21CQUFDO29CQUNSLE9BQU8sRUFBRTt3QkFDUCxtQkFBbUIsQ0FBQyxPQUFPLEVBQUU7d0JBQzdCLHVCQUF1QixDQUFDLE9BQU8sRUFBRTt3QkFDakMsaUJBQWlCLENBQUMsT0FBTyxFQUFFO3FCQUM1QjtvQkFDRCxPQUFPLEVBQUUsZ0JBQWdCO2lCQUMxQjs7QUFPRCxNQUFNLE9BQU8sWUFBWTtJQUN2QixNQUFNLENBQUMsT0FBTztRQUNaLE9BQU8sRUFBRSxRQUFRLEVBQUUsZ0JBQWdCLEVBQUUsQ0FBQztJQUN4QyxDQUFDOzt5R0FIVSxZQUFZOzBHQUFaLFlBQVksWUFoQkMsbUJBQW1CLEVBQUUsdUJBQXVCLEVBQUUsaUJBQWlCLGFBQS9ELG1CQUFtQixFQUFFLHVCQUF1QixFQUFFLGlCQUFpQjswR0FnQjVFLFlBQVksWUFIZCxnQkFBZ0IsRUFiRCxtQkFBbUIsRUFBRSx1QkFBdUIsRUFBRSxpQkFBaUI7MkZBZ0I1RSxZQUFZO2tCQUp4QixRQUFRO21CQUFDO29CQUNSLE9BQU8sRUFBRSxnQkFBZ0I7b0JBQ3pCLE9BQU8sRUFBRSxnQkFBZ0I7aUJBQzFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUsIE1vZHVsZVdpdGhQcm92aWRlcnMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuZXhwb3J0IHsgQmFyQ29tcG9uZW50IH0gZnJvbSAnLi9iYXIuY29tcG9uZW50JztcbmV4cG9ydCB7IFByb2dyZXNzRGlyZWN0aXZlIH0gZnJvbSAnLi9wcm9ncmVzcy5kaXJlY3RpdmUnO1xuZXhwb3J0IHsgUHJvZ3Jlc3NiYXJDb21wb25lbnQgfSBmcm9tICcuL3Byb2dyZXNzYmFyLmNvbXBvbmVudCc7XG5leHBvcnQgeyBQcm9ncmVzc2Jhck1vZHVsZSB9IGZyb20gJy4vcHJvZ3Jlc3NiYXIubW9kdWxlJztcbmV4cG9ydCB7IFByb2dyZXNzYmFyQ29uZmlnQ29tcG9uZW50IH0gZnJvbSAnLi9wcm9ncmVzc2Jhci5jb25maWcuY29tcG9uZW50JztcbmV4cG9ydCB7IFByb2dyZXNzU3Bpbm5lckNvbXBvbmVudCB9IGZyb20gJy4vcHJvZ3Jlc3Mtc3Bpbm5lci5jb21wb25lbnQnO1xuaW1wb3J0IHsgUHJvZ3Jlc3NiYXJNb2R1bGUgfSBmcm9tICcuL3Byb2dyZXNzYmFyLm1vZHVsZSc7XG5cbmV4cG9ydCAqIGZyb20gJy4vcHJvZ3Jlc3MtYmFycy1tb2R1bGUvaW5kZXgnO1xuZXhwb3J0ICogZnJvbSAnLi9wcm9ncmVzcy1zcGlubmVyLW1vZHVsZS9pbmRleCc7XG5cbmltcG9ydCB7IE1kUHJvZ3Jlc3NTcGlubmVyTW9kdWxlIH0gZnJvbSAnLi9wcm9ncmVzcy1zcGlubmVyLW1vZHVsZS9pbmRleCc7XG5pbXBvcnQgeyBNZFByb2dyZXNzQmFyTW9kdWxlIH0gZnJvbSAnLi9wcm9ncmVzcy1iYXJzLW1vZHVsZS9pbmRleCc7XG5cbmNvbnN0IE1BVEVSSUFMX01PRFVMRVMgPSBbTWRQcm9ncmVzc0Jhck1vZHVsZSwgTWRQcm9ncmVzc1NwaW5uZXJNb2R1bGUsIFByb2dyZXNzYmFyTW9kdWxlXTtcblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW1xuICAgIE1kUHJvZ3Jlc3NCYXJNb2R1bGUuZm9yUm9vdCgpLFxuICAgIE1kUHJvZ3Jlc3NTcGlubmVyTW9kdWxlLmZvclJvb3QoKSxcbiAgICBQcm9ncmVzc2Jhck1vZHVsZS5mb3JSb290KCksXG4gIF0sXG4gIGV4cG9ydHM6IE1BVEVSSUFMX01PRFVMRVMsXG59KVxuZXhwb3J0IGNsYXNzIFByZWxvYWRlcnNNb2R1bGUge31cblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogTUFURVJJQUxfTU9EVUxFUyxcbiAgZXhwb3J0czogTUFURVJJQUxfTU9EVUxFUyxcbn0pXG5leHBvcnQgY2xhc3MgUHJvZ3Jlc3NCYXJzIHtcbiAgc3RhdGljIGZvclJvb3QoKTogTW9kdWxlV2l0aFByb3ZpZGVyczxQcmVsb2FkZXJzTW9kdWxlPiB7XG4gICAgcmV0dXJuIHsgbmdNb2R1bGU6IFByZWxvYWRlcnNNb2R1bGUgfTtcbiAgfVxufVxuIl19