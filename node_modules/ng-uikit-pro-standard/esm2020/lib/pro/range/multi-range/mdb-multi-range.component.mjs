import { coerceBooleanProperty, coerceNumberProperty, } from '@angular/cdk/coercion';
import { Component, EventEmitter, forwardRef, Input, Output, ViewChild, ViewEncapsulation, ChangeDetectionStrategy, } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/forms";
export const RANGE_VALUE_ACCESOR = {
    provide: NG_VALUE_ACCESSOR,
    // eslint-disable-next-line @typescript-eslint/no-use-before-define
    useExisting: forwardRef(() => MdbMultiRangeInputComponent),
    multi: true,
};
export class MdbMultiRangeInputComponent {
    constructor(renderer) {
        this.renderer = renderer;
        this._required = false;
        this.value = { first: 0, second: 0 };
        this._disabled = false;
        this._min = 0;
        this._max = 100;
        this.rangeValueChange = new EventEmitter();
        this.firstVisibility = false;
        this.secondVisibility = false;
        this.cloudRange = 0;
        // Control Value Accessor Methods
        this.onChange = (_) => { };
        this.onTouched = () => { };
    }
    get required() {
        return this._required;
    }
    set required(value) {
        this._required = coerceBooleanProperty(value);
    }
    get disabled() {
        return this._disabled;
    }
    set disabled(value) {
        this._disabled = coerceBooleanProperty(value);
    }
    get min() {
        return this._min;
    }
    set min(value) {
        this._min = coerceNumberProperty(value);
    }
    get max() {
        return this._max;
    }
    set max(value) {
        this._max = coerceNumberProperty(value);
    }
    get step() {
        return this._step;
    }
    set step(value) {
        this._step = coerceNumberProperty(value);
    }
    ngOnInit() {
        this.range = this.value;
    }
    ngAfterViewInit() {
        this.steps = this.max - this.min;
        // fix(slider): resolve problem with not moving slider cloud when setting value with [value] or reactive forms
        // Manual call the moveValueCloud method to move range value cloud to proper position based on the `value` variable
        if (this.value) {
            this.moveValueCloud(new Event('input'), 'first', Number(this.value.first));
            this.moveValueCloud(new Event('input'), 'second', Number(this.value.second));
        }
    }
    firstRangeInput(event) {
        this.rangeValueChange.emit(this.range);
        if (typeof this.range === 'object' && this.range.first === 0) {
            return this.range;
        }
        this.focusRangeInput('first');
        this.moveValueCloud(event, 'first');
    }
    secondRangeInput(event) {
        this.rangeValueChange.emit(this.range);
        if (typeof this.range === 'object' && this.range.second === 0) {
            return this.range;
        }
        this.focusRangeInput('second');
        this.moveValueCloud(event, 'second');
    }
    moveValueCloud(event, element, value) {
        // if `moveValueCloud()` is called by (input) event take value as event.target.value.
        // If it's called manually, take value from parameter.
        // This is needed in situation, when slider value is set by default or ReactiveForms,
        // and value clound is not moved to proper position
        const newValue = event.target ? event.target.value : value;
        const newRelativeGain = newValue - this.min;
        const inputWidth = element === 'first'
            ? this.firstInput.nativeElement.offsetWidth
            : this.secondInput.nativeElement.offsetWidth;
        let thumbOffset = 0;
        const offsetAmmount = 15;
        const distanceFromMiddle = newRelativeGain - this.steps / 2;
        this.stepLength = inputWidth / this.steps;
        thumbOffset = (distanceFromMiddle / this.steps) * offsetAmmount;
        this.cloudRange = this.stepLength * newRelativeGain - thumbOffset;
        this.renderer.setStyle(element === 'first'
            ? this.firstRangeCloud.nativeElement
            : this.secondRangeCloud.nativeElement, 'left', this.cloudRange + 'px');
    }
    focusRangeInput(element) {
        if (this.checkIfSafari()) {
            element === 'first'
                ? this.firstInput.nativeElement.focus()
                : this.secondInput.nativeElement.focus();
        }
        element === 'first' ? (this.firstVisibility = true) : (this.secondVisibility = true);
    }
    blurRangeInput(element) {
        if (this.checkIfSafari()) {
            element === 'first'
                ? this.firstInput.nativeElement.blur()
                : this.secondInput.nativeElement.blur();
        }
        element === 'first' ? (this.firstVisibility = false) : (this.secondVisibility = false);
    }
    checkIfSafari() {
        const isSafari = navigator.userAgent.indexOf('Safari') > -1;
        const isChrome = navigator.userAgent.indexOf('Chrome') > -1;
        const isFirefox = navigator.userAgent.indexOf('Firefox') > -1;
        const isOpera = navigator.userAgent.indexOf('Opera') > -1;
        if (isSafari && !isChrome && !isFirefox && !isOpera) {
            return true;
        }
        else {
            return false;
        }
    }
    writeValue(value) {
        this.value = value;
        this.range = value;
        // fix(slider): resolve problem with not moving slider cloud when setting value with [value] or reactive forms
        // Manual call the moveValueCloud method to move range value cloud to proper position based on the `value` variable
        if (value) {
            setTimeout(() => {
                this.moveValueCloud(new Event('input'), 'first', Number(value.first));
                this.moveValueCloud(new Event('input'), 'second', Number(value.second));
            }, 0);
        }
    }
    registerOnChange(fn) {
        this.onChange = fn;
    }
    registerOnTouched(fn) {
        this.onTouched = fn;
    }
    setDisabledState(isDisabled) {
        this.disabled = isDisabled;
    }
}
MdbMultiRangeInputComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: MdbMultiRangeInputComponent, deps: [{ token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Component });
MdbMultiRangeInputComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.2.7", type: MdbMultiRangeInputComponent, selector: "mdb-multi-range-input", inputs: { id: "id", required: "required", name: "name", value: "value", disabled: "disabled", min: "min", max: "max", step: "step" }, outputs: { rangeValueChange: "rangeValueChange" }, providers: [RANGE_VALUE_ACCESOR], viewQueries: [{ propertyName: "firstInput", first: true, predicate: ["firstInput"], descendants: true, static: true }, { propertyName: "secondInput", first: true, predicate: ["secondInput"], descendants: true, static: true }, { propertyName: "firstRangeCloud", first: true, predicate: ["firstRangeCloud"], descendants: true, static: true }, { propertyName: "secondRangeCloud", first: true, predicate: ["secondRangeCloud"], descendants: true, static: true }, { propertyName: "rangeField", first: true, predicate: ["rangeField"], descendants: true, static: true }], ngImport: i0, template: "<div class=\"multi-range-field my-5 pb-5\">\n  <div class=\"range-field\" #rangeField>\n    <div class=\"track\">\n      <div\n        #firstRangeCloud\n        class=\"range-cloud\"\n        title=\"range\"\n        [ngClass]=\"{ visible: this.firstVisibility }\"\n      >\n        <span class=\"text-transform\">{{ range.first }}</span>\n      </div>\n    </div>\n    <input\n      #firstInput\n      [value]=\"value.first\"\n      [attr.value]=\"value.first\"\n      [name]=\"name\"\n      [id]=\"id\"\n      [min]=\"min\"\n      [max]=\"max\"\n      [step]=\"step\"\n      [disabled]=\"disabled\"\n      type=\"range\"\n      class=\"mdbMultiRange original active\"\n      (input)=\"firstRangeInput($event)\"\n      [(ngModel)]=\"range.first\"\n      (touchstart)=\"focusRangeInput('first')\"\n      (touchend)=\"blurRangeInput('first')\"\n      (mousedown)=\"focusRangeInput('first')\"\n      (mouseup)=\"blurRangeInput('first')\"\n      (blur)=\"blurRangeInput('first')\"\n    />\n\n    <div class=\"track\">\n      <div\n        #secondRangeCloud\n        class=\"range-cloud\"\n        title=\"range\"\n        [ngClass]=\"{ visible: this.secondVisibility }\"\n      >\n        <span class=\"text-transform\">{{ range.second }}</span>\n      </div>\n    </div>\n    <input\n      #secondInput\n      [value]=\"value.second\"\n      [attr.value]=\"value.second\"\n      [name]=\"name\"\n      [id]=\"id\"\n      [min]=\"min\"\n      [max]=\"max\"\n      [step]=\"step\"\n      [disabled]=\"disabled\"\n      type=\"range\"\n      class=\"mdbMultiRange original ghost active\"\n      (input)=\"secondRangeInput($event)\"\n      [(ngModel)]=\"range.second\"\n      (touchstart)=\"focusRangeInput('second')\"\n      (touchend)=\"blurRangeInput('second')\"\n      (mousedown)=\"focusRangeInput('second')\"\n      (mouseup)=\"blurRangeInput('second')\"\n      (blur)=\"blurRangeInput('second')\"\n    />\n  </div>\n</div>\n", styles: [".range-field input[type=range]{width:100%;height:1.5rem;padding:0;background-color:transparent;-webkit-appearance:none;appearance:none}.range-field input[type=range]:focus{outline:none}.range-field input[type=range]+.thumb{position:absolute;border:none;height:0;width:0;border-radius:50%;background-color:#4285f4;top:10px;margin-left:-6px;transform-origin:50% 50%;transform:rotate(-45deg)}.range-field input[type=range]+.thumb .value{display:block;width:30px;text-align:center;color:#4285f4;font-size:0;transform:rotate(45deg)}.range-field input[type=range]+.thumb.active{border-radius:50% 50% 50% 0}.range-field input[type=range]+.thumb.active .value{color:#fff;margin-left:-1px;margin-top:8px;font-size:10px}.range-field input[type=range]::-webkit-slider-runnable-track{height:3px;background:#c2c0c2;border:none}.range-field input[type=range]::-webkit-slider-thumb{-webkit-appearance:none;appearance:none;border:none;height:14px;width:14px;border-radius:50%;background-color:#4285f4;transform-origin:50% 50%;margin:-5px 0 0;-webkit-transition:.3s;transition:.3s}.range-field input[type=range]:focus::-webkit-slider-runnable-track{background:#ccc}.range-field input[type=range]::-moz-range-track{height:3px;background:#c2c0c2;border:none}.range-field input[type=range]::-moz-range-thumb{border:none;height:14px;width:14px;border-radius:50%;background:#4285f4;margin-top:-5px;position:relative;appearance:none;outline:none}.range-field input[type=range]::-ms-track{height:3px;background:transparent;border-color:transparent;border-width:6px 0;color:transparent}.range-field input[type=range]::-ms-fill-lower{background:#c2c0c2}.range-field input[type=range]::-ms-fill-upper{background:#c2c0c2}.range-field input[type=range]::-ms-thumb{border:none;height:14px;width:14px;border-radius:50%;background:#4285f4}.range-field input[type=range]:focus::-ms-fill-lower{background:#c2c0c2}.range-field input[type=range]:focus::-ms-fill-upper{background:#c2c0c2}@supports (--css: variables){input[type=range].mdbMultiRange{padding:0;margin:0;display:inline-block;vertical-align:top;position:absolute;pointer-events:none}input[type=range].mdbMultiRange::-moz-range-thumb{pointer-events:all}input[type=range].mdbMultiRange::-webkit-slider-thumb{pointer-events:all}input[type=range].mdbMultiRange.original{position:absolute}input[type=range].mdbMultiRange.original::-webkit-slider-thumb{position:relative;z-index:2}input[type=range].mdbMultiRange.original::-moz-range-thumb{transform:scale(1);z-index:1}input[type=range].mdbMultiRange.ghost{position:relative}input[type=range].mdbMultiRange.ghost::-moz-range-track{background-color:transparent}}.multi-range-field{position:relative}.multi-range-field input[type=range]{width:100%;height:1.5rem;padding:0;background-color:transparent;-webkit-appearance:none;appearance:none}.multi-range-field input[type=range]:focus{outline:none}.multi-range-field input[type=range]+.thumb{position:absolute;border:none;height:0;width:0;border-radius:50%;background-color:#4285f4;top:10px;margin-left:-6px;transform-origin:50% 50%;transform:rotate(-45deg)}.multi-range-field input[type=range]+.thumb .value{display:block;width:30px;text-align:center;color:#4285f4;font-size:0;transform:rotate(45deg)}.multi-range-field input[type=range]+.thumb.active{border-radius:50% 50% 50% 0}.multi-range-field input[type=range]+.thumb.active .value{color:#fff;margin-left:-1px;margin-top:8px;font-size:10px}.multi-range-field input[type=range]::-webkit-slider-runnable-track{height:3px;background:#c2c0c2;border:none}.multi-range-field input[type=range]::-webkit-slider-thumb{-webkit-appearance:none;appearance:none;border:none;height:14px;width:14px;border-radius:50%;background-color:#4285f4;transform-origin:50% 50%;margin:-5px 0 0;-webkit-transition:.3s;transition:.3s}.multi-range-field input[type=range]:focus::-webkit-slider-runnable-track{background:#ccc}.multi-range-field input[type=range]::-moz-range-track{height:3px;background:#c2c0c2;border:none}.multi-range-field input[type=range]::-moz-range-thumb{border:none;height:14px;width:14px;border-radius:50%;background:#4285f4;margin-top:-5px;position:relative;appearance:none;outline:none}.multi-range-field input[type=range]::-ms-track{height:3px;background:transparent;border-color:transparent;border-width:6px 0;color:transparent}.multi-range-field input[type=range]::-ms-fill-lower{background:#c2c0c2}.multi-range-field input[type=range]::-ms-fill-upper{background:#c2c0c2}.multi-range-field input[type=range]::-ms-thumb{border:none;height:14px;width:14px;border-radius:50%;background:#4285f4}.multi-range-field input[type=range]:focus::-ms-fill-lower{background:#c2c0c2}.multi-range-field input[type=range]:focus::-ms-fill-upper{background:#c2c0c2}.thumb-horizontal-wrapper{position:relative;transform:rotate(-270deg);top:500px}.multi-range-field input[type=range]+.thumb-horizontal .value{transform:rotate(315deg)!important}.range-field:focus{box-shadow:none}.range-field:focus::-webkit-slider-thumb{box-shadow:none}.range-field:focus::-moz-range-thumb{box-shadow:none}.range-field:focus::-ms-thumb{box-shadow:none}.range-field::-moz-focus-outer{border:0}.range-field::-webkit-slider-thumb{margin-top:-6px;box-shadow:none;-webkit-appearance:none;appearance:none}.range-field::-webkit-slider-runnable-track{height:4px;border-radius:0}.range-field::-moz-range-thumb{box-shadow:none;appearance:none}.range-field{position:relative}.range-field .track{position:absolute}.range-field .track .range-cloud{position:absolute;display:block;height:30px;width:30px;top:-32px;margin-left:-15px;text-align:center;border-radius:50% 50% 50% 0;transform:scale(0);transform-origin:bottom;transition:transform .2s ease-in-out}.range-field .track .range-cloud:after{position:absolute;display:block;content:\"\";transform:translate(-50%);width:100%;height:100%;top:0;border-radius:50% 50% 50% 0;transform:rotate(-45deg);background:#1266f1;z-index:-1}.range-field .track .range-cloud.visible{transform:scale(1)}.range-field .track .range-cloud .text-transform{display:block;font-size:12px;line-height:30px;color:#fff;z-index:2}\n"], directives: [{ type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i2.RangeValueAccessor, selector: "input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]" }, { type: i2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: MdbMultiRangeInputComponent, decorators: [{
            type: Component,
            args: [{ selector: 'mdb-multi-range-input', encapsulation: ViewEncapsulation.None, providers: [RANGE_VALUE_ACCESOR], changeDetection: ChangeDetectionStrategy.OnPush, template: "<div class=\"multi-range-field my-5 pb-5\">\n  <div class=\"range-field\" #rangeField>\n    <div class=\"track\">\n      <div\n        #firstRangeCloud\n        class=\"range-cloud\"\n        title=\"range\"\n        [ngClass]=\"{ visible: this.firstVisibility }\"\n      >\n        <span class=\"text-transform\">{{ range.first }}</span>\n      </div>\n    </div>\n    <input\n      #firstInput\n      [value]=\"value.first\"\n      [attr.value]=\"value.first\"\n      [name]=\"name\"\n      [id]=\"id\"\n      [min]=\"min\"\n      [max]=\"max\"\n      [step]=\"step\"\n      [disabled]=\"disabled\"\n      type=\"range\"\n      class=\"mdbMultiRange original active\"\n      (input)=\"firstRangeInput($event)\"\n      [(ngModel)]=\"range.first\"\n      (touchstart)=\"focusRangeInput('first')\"\n      (touchend)=\"blurRangeInput('first')\"\n      (mousedown)=\"focusRangeInput('first')\"\n      (mouseup)=\"blurRangeInput('first')\"\n      (blur)=\"blurRangeInput('first')\"\n    />\n\n    <div class=\"track\">\n      <div\n        #secondRangeCloud\n        class=\"range-cloud\"\n        title=\"range\"\n        [ngClass]=\"{ visible: this.secondVisibility }\"\n      >\n        <span class=\"text-transform\">{{ range.second }}</span>\n      </div>\n    </div>\n    <input\n      #secondInput\n      [value]=\"value.second\"\n      [attr.value]=\"value.second\"\n      [name]=\"name\"\n      [id]=\"id\"\n      [min]=\"min\"\n      [max]=\"max\"\n      [step]=\"step\"\n      [disabled]=\"disabled\"\n      type=\"range\"\n      class=\"mdbMultiRange original ghost active\"\n      (input)=\"secondRangeInput($event)\"\n      [(ngModel)]=\"range.second\"\n      (touchstart)=\"focusRangeInput('second')\"\n      (touchend)=\"blurRangeInput('second')\"\n      (mousedown)=\"focusRangeInput('second')\"\n      (mouseup)=\"blurRangeInput('second')\"\n      (blur)=\"blurRangeInput('second')\"\n    />\n  </div>\n</div>\n", styles: [".range-field input[type=range]{width:100%;height:1.5rem;padding:0;background-color:transparent;-webkit-appearance:none;appearance:none}.range-field input[type=range]:focus{outline:none}.range-field input[type=range]+.thumb{position:absolute;border:none;height:0;width:0;border-radius:50%;background-color:#4285f4;top:10px;margin-left:-6px;transform-origin:50% 50%;transform:rotate(-45deg)}.range-field input[type=range]+.thumb .value{display:block;width:30px;text-align:center;color:#4285f4;font-size:0;transform:rotate(45deg)}.range-field input[type=range]+.thumb.active{border-radius:50% 50% 50% 0}.range-field input[type=range]+.thumb.active .value{color:#fff;margin-left:-1px;margin-top:8px;font-size:10px}.range-field input[type=range]::-webkit-slider-runnable-track{height:3px;background:#c2c0c2;border:none}.range-field input[type=range]::-webkit-slider-thumb{-webkit-appearance:none;appearance:none;border:none;height:14px;width:14px;border-radius:50%;background-color:#4285f4;transform-origin:50% 50%;margin:-5px 0 0;-webkit-transition:.3s;transition:.3s}.range-field input[type=range]:focus::-webkit-slider-runnable-track{background:#ccc}.range-field input[type=range]::-moz-range-track{height:3px;background:#c2c0c2;border:none}.range-field input[type=range]::-moz-range-thumb{border:none;height:14px;width:14px;border-radius:50%;background:#4285f4;margin-top:-5px;position:relative;appearance:none;outline:none}.range-field input[type=range]::-ms-track{height:3px;background:transparent;border-color:transparent;border-width:6px 0;color:transparent}.range-field input[type=range]::-ms-fill-lower{background:#c2c0c2}.range-field input[type=range]::-ms-fill-upper{background:#c2c0c2}.range-field input[type=range]::-ms-thumb{border:none;height:14px;width:14px;border-radius:50%;background:#4285f4}.range-field input[type=range]:focus::-ms-fill-lower{background:#c2c0c2}.range-field input[type=range]:focus::-ms-fill-upper{background:#c2c0c2}@supports (--css: variables){input[type=range].mdbMultiRange{padding:0;margin:0;display:inline-block;vertical-align:top;position:absolute;pointer-events:none}input[type=range].mdbMultiRange::-moz-range-thumb{pointer-events:all}input[type=range].mdbMultiRange::-webkit-slider-thumb{pointer-events:all}input[type=range].mdbMultiRange.original{position:absolute}input[type=range].mdbMultiRange.original::-webkit-slider-thumb{position:relative;z-index:2}input[type=range].mdbMultiRange.original::-moz-range-thumb{transform:scale(1);z-index:1}input[type=range].mdbMultiRange.ghost{position:relative}input[type=range].mdbMultiRange.ghost::-moz-range-track{background-color:transparent}}.multi-range-field{position:relative}.multi-range-field input[type=range]{width:100%;height:1.5rem;padding:0;background-color:transparent;-webkit-appearance:none;appearance:none}.multi-range-field input[type=range]:focus{outline:none}.multi-range-field input[type=range]+.thumb{position:absolute;border:none;height:0;width:0;border-radius:50%;background-color:#4285f4;top:10px;margin-left:-6px;transform-origin:50% 50%;transform:rotate(-45deg)}.multi-range-field input[type=range]+.thumb .value{display:block;width:30px;text-align:center;color:#4285f4;font-size:0;transform:rotate(45deg)}.multi-range-field input[type=range]+.thumb.active{border-radius:50% 50% 50% 0}.multi-range-field input[type=range]+.thumb.active .value{color:#fff;margin-left:-1px;margin-top:8px;font-size:10px}.multi-range-field input[type=range]::-webkit-slider-runnable-track{height:3px;background:#c2c0c2;border:none}.multi-range-field input[type=range]::-webkit-slider-thumb{-webkit-appearance:none;appearance:none;border:none;height:14px;width:14px;border-radius:50%;background-color:#4285f4;transform-origin:50% 50%;margin:-5px 0 0;-webkit-transition:.3s;transition:.3s}.multi-range-field input[type=range]:focus::-webkit-slider-runnable-track{background:#ccc}.multi-range-field input[type=range]::-moz-range-track{height:3px;background:#c2c0c2;border:none}.multi-range-field input[type=range]::-moz-range-thumb{border:none;height:14px;width:14px;border-radius:50%;background:#4285f4;margin-top:-5px;position:relative;appearance:none;outline:none}.multi-range-field input[type=range]::-ms-track{height:3px;background:transparent;border-color:transparent;border-width:6px 0;color:transparent}.multi-range-field input[type=range]::-ms-fill-lower{background:#c2c0c2}.multi-range-field input[type=range]::-ms-fill-upper{background:#c2c0c2}.multi-range-field input[type=range]::-ms-thumb{border:none;height:14px;width:14px;border-radius:50%;background:#4285f4}.multi-range-field input[type=range]:focus::-ms-fill-lower{background:#c2c0c2}.multi-range-field input[type=range]:focus::-ms-fill-upper{background:#c2c0c2}.thumb-horizontal-wrapper{position:relative;transform:rotate(-270deg);top:500px}.multi-range-field input[type=range]+.thumb-horizontal .value{transform:rotate(315deg)!important}.range-field:focus{box-shadow:none}.range-field:focus::-webkit-slider-thumb{box-shadow:none}.range-field:focus::-moz-range-thumb{box-shadow:none}.range-field:focus::-ms-thumb{box-shadow:none}.range-field::-moz-focus-outer{border:0}.range-field::-webkit-slider-thumb{margin-top:-6px;box-shadow:none;-webkit-appearance:none;appearance:none}.range-field::-webkit-slider-runnable-track{height:4px;border-radius:0}.range-field::-moz-range-thumb{box-shadow:none;appearance:none}.range-field{position:relative}.range-field .track{position:absolute}.range-field .track .range-cloud{position:absolute;display:block;height:30px;width:30px;top:-32px;margin-left:-15px;text-align:center;border-radius:50% 50% 50% 0;transform:scale(0);transform-origin:bottom;transition:transform .2s ease-in-out}.range-field .track .range-cloud:after{position:absolute;display:block;content:\"\";transform:translate(-50%);width:100%;height:100%;top:0;border-radius:50% 50% 50% 0;transform:rotate(-45deg);background:#1266f1;z-index:-1}.range-field .track .range-cloud.visible{transform:scale(1)}.range-field .track .range-cloud .text-transform{display:block;font-size:12px;line-height:30px;color:#fff;z-index:2}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.Renderer2 }]; }, propDecorators: { id: [{
                type: Input
            }], required: [{
                type: Input
            }], name: [{
                type: Input
            }], value: [{
                type: Input
            }], disabled: [{
                type: Input
            }], min: [{
                type: Input
            }], max: [{
                type: Input
            }], step: [{
                type: Input
            }], rangeValueChange: [{
                type: Output
            }], firstInput: [{
                type: ViewChild,
                args: ['firstInput', { static: true }]
            }], secondInput: [{
                type: ViewChild,
                args: ['secondInput', { static: true }]
            }], firstRangeCloud: [{
                type: ViewChild,
                args: ['firstRangeCloud', { static: true }]
            }], secondRangeCloud: [{
                type: ViewChild,
                args: ['secondRangeCloud', { static: true }]
            }], rangeField: [{
                type: ViewChild,
                args: ['rangeField', { static: true }]
            }] } });
//# sourceMappingURL=data:application/json;base64,