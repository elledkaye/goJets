import { DOCUMENT } from '@angular/common';
import { ChangeDetectionStrategy, Component, Inject, ViewChild, ViewEncapsulation, } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/cdk/a11y";
import * as i2 from "@angular/common";
import * as i3 from "../../free/waves/waves-effect.directive";
export class MdbTimePickerContentComponent {
    constructor(_cdRef, _ngZone, focusMonitor, elem, renderer, _document) {
        this._cdRef = _cdRef;
        this._ngZone = _ngZone;
        this.focusMonitor = focusMonitor;
        this.elem = elem;
        this.renderer = renderer;
        this._document = _document;
        this._disabledHours = [];
        this._disabledMinutes = [];
        this._isMouseDown = false;
        this._hoursTicks = [];
        this._minuteDigitalDisabled = false;
        this._minutesTicks = [];
        this._okButtonDisabled = false;
        this._showHours = true;
        this._radius = {
            dial: 135,
            inner: 80,
            outer: 110,
            tick: 20,
        };
        this._denominator = {
            1: 30,
            5: 6,
            10: 3,
            15: 2,
            20: 1.5,
            // 30: 1,
            // 60: 0.5
        };
        this.touchSupported = 'ontouchstart' in window;
        this._setOkBtnDisabled = () => {
            const hour = Number(this._to24(this._selectedTime).h);
            this._okButtonDisabled = this._disabledHours[hour];
            if (!this._okButtonDisabled) {
                if (this._min &&
                    this._selectedTime.h === this._min.h &&
                    this._selectedTime.ampm === this._min.ampm) {
                    this._okButtonDisabled = this._selectedTime.m < this._min.m;
                }
                if (this._max &&
                    this._selectedTime.h === this._max.h &&
                    this._selectedTime.ampm === this._max.ampm) {
                    this._okButtonDisabled = this._selectedTime.m > this._max.m;
                }
            }
        };
    }
    ngOnInit() {
        this._max = this.max;
        this._min = this.min;
        this._selectedTime = this.value;
        const { ampm } = this._selectedTime;
        // Add disabled hours to array for PM and AM Hours
        if (this.twelveHour) {
            this._selectedTime.ampm = ampm === 'PM' ? 'AM' : 'PM';
            this._generateTick();
            this._selectedTime.ampm = this._selectedTime.ampm === 'PM' ? 'AM' : 'PM';
        }
        this._generateTick();
        this._setOkBtnDisabled();
        this._setMinuteDigitalDisabled();
    }
    ngAfterViewInit() {
        ['mousedown', 'mouseup', 'touchend', 'touchstart'].forEach((event) => {
            this.renderer.listen(this.plate.nativeElement, event, (ev) => {
                if (event === 'mousedown' || event === 'touchstart') {
                    this._mousedown(ev, false);
                }
            });
        });
        this._checkDraw();
        setTimeout(() => {
            this.focusMonitor.focusVia(this.focus, 'keyboard');
        }, 0);
    }
    _checkDraw() {
        const { h, m } = this._selectedTime;
        const value = this._showHours ? parseInt(h, 0) : parseInt(m, 0);
        const unit = Math.PI / (this._showHours ? 6 : 30), radian = value * unit, radius = this._showHours && value > 0 && value < 13 ? this._radius.inner : this._radius.outer, xd = Math.sin(radian) * radius, yd = -Math.cos(radian) * radius;
        this.setClockHand(xd, yd);
    }
    _mousedown(e, space) {
        this._isMouseDown = true;
        const offset = this.plate.nativeElement.getBoundingClientRect(), isTouch = /^touch/.test(e.type), x0 = offset.left + this._radius.dial, y0 = offset.top + this._radius.dial, dx = (isTouch ? e.touches[0] : e).clientX - x0, dy = (isTouch ? e.touches[0] : e).clientY - y0, z = Math.sqrt(dx * dx + dy * dy);
        let moved = false;
        if (space &&
            (z < this._radius.outer - this._radius.tick || z > this._radius.outer + this._radius.tick)) {
            return;
        }
        e.preventDefault();
        e.stopPropagation();
        if (this._showHours) {
            this.setClockHand(dx, dy);
        }
        else {
            this.setClockHand(dx, dy, this.rounding);
        }
        const mousemoveEventMethod = (event) => {
            if (!this.touchSupported) {
                event.preventDefault();
            }
            event.stopPropagation();
            // eslint-disable-next-line @typescript-eslint/no-shadow
            const isTouch = /^touch/.test(event.type), x = (isTouch ? event.touches[0] : event).clientX - x0, y = (isTouch ? event.touches[0] : event).clientY - y0;
            if (!moved && x === dx && y === dy) {
                return;
            }
            moved = true;
            this._ngZone.run(() => {
                this.setClockHand(x, y, this.rounding);
            });
        };
        const mouseupEventMethod = (event) => {
            this._document.removeEventListener('mousemove', mousemoveEventMethod);
            if (this.touchSupported) {
                this._document.removeEventListener('touchmove', mousemoveEventMethod);
            }
            if (!this.touchSupported) {
                event.preventDefault();
            }
            const x = event.clientX - x0, y = event.clientY - y0;
            if ((space || moved) && x === dx && y === dy) {
                this.setClockHand(x, y);
            }
            this._ngZone.run(() => {
                if (this.autoClose && !this._showHours) {
                    this._okBtnClicked();
                }
            });
            this._showMinutesClock();
            this.digitalMinute.nativeElement.focus();
            this._isMouseDown = false;
            this._document.removeEventListener('mouseup', mouseupEventMethod);
            if (this.touchSupported) {
                this._document.removeEventListener('touchend', mouseupEventMethod);
            }
            this.picker._emitTimeChangeEvent(this._selectedTime);
        };
        this._document.addEventListener('mousemove', mousemoveEventMethod);
        if (this.touchSupported) {
            this._document.addEventListener('touchmove', mousemoveEventMethod);
        }
        this._document.addEventListener('mouseup', mouseupEventMethod);
        if (this.touchSupported) {
            this._document.addEventListener('touchend', mouseupEventMethod);
        }
    }
    _closeBtnClicked() {
        // todo this.isOpen = false;
        const { ampm, h, m } = this._selectedTime;
        this._returnHours = this.twelveHour ? `${h}:${m}${ampm}` : `${h}:${m}${ampm}`;
        this.picker.close(false);
    }
    _clearBtnClicked() {
        this._setAmPm('AM');
        this._setHour(12);
        this._setMinute(0);
        this._generateTick();
        this._showHoursClock();
        this.picker._setValue('');
        this.picker._selectionChange$.next('');
    }
    _okBtnClicked() {
        if (!this._okButtonDisabled) {
            const { ampm, h, m } = this._selectedTime;
            this._returnHours = this.twelveHour ? `${h}:${m}${ampm}` : `${h}:${m}${ampm}`;
            this.picker._setValue(this._returnHours);
            this.picker._emitTimeDoneEvent(this._selectedTime);
            this.picker.onChangeCb(this._returnHours);
            this.picker.close(true);
        }
    }
    _arrowChangeHour(key) {
        const { h, ampm } = this._to24(this._selectedTime);
        const selectedHour = Number(h);
        const availableHours = [];
        this._disabledHours.map((hour, index) => !hour && availableHours.push(index));
        let toChange;
        let value = key === 'ArrowUp'
            ? availableHours.indexOf(selectedHour) + 1
            : availableHours.indexOf(selectedHour) - 1;
        value = value < 0 ? availableHours.length - 1 : value;
        value = value > availableHours.length - 1 ? 0 : value;
        toChange = availableHours[value];
        if (this.twelveHour) {
            if (toChange >= 12) {
                toChange = toChange - 12;
                if (ampm === 'AM') {
                    this._setAmPm('PM');
                }
            }
            else if (toChange <= 0 || toChange < 12) {
                if (ampm === 'PM') {
                    this._setAmPm('AM');
                }
            }
        }
        this._showHoursClock();
        this._setHour(toChange);
        this._checkDraw();
    }
    _arrowChangeMinute(key) {
        if (!this._minuteDigitalDisabled) {
            if (this._showHours) {
                this._showMinutesClock();
            }
            const { m } = this._selectedTime;
            const availableMinutes = [];
            this._generateMinutesDisable();
            this._disabledMinutes.map((disabled, i) => {
                if (!disabled) {
                    availableMinutes.push(i);
                }
            });
            let toChange;
            let value = key === 'ArrowUp'
                ? availableMinutes.indexOf(Number(m)) + 1
                : availableMinutes.indexOf(Number(m)) - 1;
            value = value < 0 ? availableMinutes.length - 1 : value;
            value = value > availableMinutes.length - 1 ? 0 : value;
            toChange = availableMinutes[value];
            this._setMinute(toChange);
            this._checkDraw();
        }
    }
    _generateMinutesDisable() {
        for (let i = 0; i < 60; i++) {
            const disableByRounding = this.rounding > 1 && i % this.rounding !== 0;
            const disabled = this._rangeMinute(i, 'min') || this._rangeMinute(i, 'max') || disableByRounding;
            this._disabledMinutes[i] = disabled;
        }
    }
    _setHour(hour) {
        if (Number(this._selectedTime.h) !== hour) {
            if (this.twelveHour) {
                hour = hour <= 0 ? 12 : hour;
                hour = hour > 12 ? 1 : hour;
            }
            else {
                hour = hour >= 24 ? 0 : hour;
                hour = hour <= -1 ? 23 : hour;
            }
            this._selectedTime.h = hour >= 10 ? `${hour}` : `0${hour}`;
            this._setMinuteDigitalDisabled();
        }
    }
    _setMinute(min) {
        if (Number(this._selectedTime.m) !== min) {
            min = min >= 60 ? 0 : min;
            min = min <= -1 ? 59 : min;
            this._selectedTime.m = min >= 10 ? `${min}` : `0${min}`;
            this._setOkBtnDisabled();
        }
    }
    _setAmPm(ampm) {
        this._selectedTime.ampm = ampm;
        this._generateTick();
        this._setOkBtnDisabled();
        this._setMinuteDigitalDisabled();
        this._checkDraw();
        this.picker._emitTimeChangeEvent(this._selectedTime);
    }
    _showHoursClock() {
        this._generateTick();
        this._showHours = true;
        this._setOkBtnDisabled();
        this._checkDraw();
    }
    _showMinutesClock() {
        if (!this._minuteDigitalDisabled) {
            this._showHours = false;
            this._generateTick();
            this._setOkBtnDisabled();
            this._generateMinutesDisable();
            if (this._disabledMinutes[Number(this._selectedTime.m)] === true) {
                this._setMinute(this._disabledMinutes.indexOf(false));
            }
            this._checkDraw();
        }
    }
    _generateTick() {
        if (this.twelveHour) {
            this._hoursTicks = [];
            for (let i = 1; i < 13; i++) {
                const radian = (i / 6) * Math.PI;
                const tick = {
                    hour: i.toString(),
                    left: this._radius.dial + Math.sin(radian) * this._radius.outer - this._radius.tick,
                    top: this._radius.dial - Math.cos(radian) * this._radius.outer - this._radius.tick,
                    disabled: this._rangeHour(i, 'min') || this._rangeHour(i, 'max'),
                };
                this._hoursTicks.push(tick);
            }
        }
        else {
            this._hoursTicks = [];
            for (let i = 0; i < 24; i++) {
                const radian = (i / 6) * Math.PI;
                const inner = i > 0 && i < 13;
                const radius = inner ? this._radius.inner : this._radius.outer;
                const hour = i === 0 ? '0' + i.toString() : i.toString();
                const tick = {
                    hour,
                    left: this._radius.dial + Math.sin(radian) * radius - this._radius.tick,
                    top: this._radius.dial - Math.cos(radian) * radius - this._radius.tick,
                    disabled: this._rangeHour(i, 'min') || this._rangeHour(i, 'max'),
                };
                this._hoursTicks.push(tick);
            }
        }
        this._minutesTicks = [];
        for (let i = 0; i < 60; i += 5) {
            const radian = (i / 30) * Math.PI;
            const disableByRounding = this.rounding > 1 && i % this.rounding !== 0;
            const min = i < 10 ? '0' + i.toString() : i.toString();
            const tick = {
                min,
                left: this._radius.dial + Math.sin(radian) * this._radius.outer - this._radius.tick,
                top: this._radius.dial - Math.cos(radian) * this._radius.outer - this._radius.tick,
                disabled: this._rangeMinute(i, 'min') || this._rangeMinute(i, 'max') || disableByRounding,
            };
            this._minutesTicks.push(tick);
        }
    }
    setClockHand(x, y, roundBy) {
        let radian = Math.atan2(x, -y);
        const isHours = this._showHours;
        const unit = Math.PI / (isHours ? 6 : roundBy ? this._denominator[roundBy] : 30);
        const z = Math.sqrt(x * x + y * y);
        const inner = isHours && z < (this._radius.outer + this._radius.inner) / 2;
        let value = this._showHours
            ? parseInt(this._selectedTime.h, 0)
            : parseInt(this._selectedTime.m, 0);
        const radius = inner && !this.twelveHour ? this._radius.inner : this._radius.outer;
        if (radian < 0) {
            radian = Math.PI * 2 + radian;
        }
        value = Math.round(radian / unit);
        radian = value * unit;
        if (this.twelveHour && isHours) {
            if (value === 0) {
                value = 12;
            }
            if (this._isMouseDown) {
                if (isHours && (this._rangeHour(value, 'min') || this._rangeHour(value, 'max'))) {
                    return;
                }
            }
        }
        else if (!this.twelveHour && isHours) {
            value = !inner ? value + 12 : value;
            value = value === 24 ? 0 : value;
            value = inner && value === 0 ? 12 : value;
            value = !inner && value === 12 ? 0 : value;
            if (this._isMouseDown) {
                if (isHours && (this._rangeHour(value, 'min') || this._rangeHour(value, 'max'))) {
                    return;
                }
            }
        }
        else {
            if (roundBy) {
                value *= roundBy;
            }
            if (value === 60) {
                value = 0;
            }
        }
        if (isHours) {
            this.fg.nativeElement.setAttribute('class', 'mdb-timepicker-canvas-fg');
        }
        else {
            if (this._rangeMinute(value, 'min') || this._rangeMinute(value, 'max')) {
                this._cdRef.markForCheck();
                return;
            }
            if (value % 5 === 0) {
                this.fg.nativeElement.setAttribute('class', 'mdb-timepicker-canvas-fg');
            }
            else {
                this.fg.nativeElement.setAttribute('class', 'mdb-timepicker-canvas-fg active');
            }
        }
        const cx1 = Math.sin(radian) * (radius - this._radius.tick), cy1 = -Math.cos(radian) * (radius - this._radius.tick), cx2 = Math.sin(radian) * radius, cy2 = -Math.cos(radian) * radius;
        this.hand.nativeElement.setAttribute('x2', cx1);
        this.hand.nativeElement.setAttribute('y2', cy1);
        this.bg.nativeElement.setAttribute('cx', cx2);
        this.bg.nativeElement.setAttribute('cy', cy2);
        this.fg.nativeElement.setAttribute('cx', cx2);
        this.fg.nativeElement.setAttribute('cy', cy2);
        if (this._showHours) {
            if (value !== Number(this._selectedTime.h)) {
                this._setHour(value);
                this._setMinuteDigitalDisabled();
            }
        }
        else {
            if (value !== Number(this._selectedTime.m)) {
                this._setMinute(value);
            }
        }
        this._cdRef.markForCheck();
    }
    _to24(time) {
        let hour = time.ampm === 'PM' ? Number(time.h) + 12 : Number(time.h);
        hour = hour === 12 ? 0 : hour;
        hour = hour === 24 ? 12 : hour;
        return {
            ...time,
            h: `${hour}`,
        };
    }
    _rangeHour(index, range) {
        let status = false;
        const i = Number(this._to24({ ...this._selectedTime, h: `${index}` }).h);
        if (!this.twelveHour) {
            const minH = this.min && Number(this._min.h);
            const maxH = this.max && Number(this._max.h);
            if (range === 'min' && this.min) {
                status = index < minH;
                if (status && this._max && this._max.h < this._min.h) {
                    status = false;
                }
            }
            else if (range === 'max' && this.max) {
                status = index > maxH;
                if (status && this._min && this._min.h > this._max.h && minH <= index) {
                    status = false;
                }
            }
        }
        else {
            const min = this._min && Number(this._to24(this._min).h);
            const max = this._max && Number(this._to24(this._max).h);
            if (range === 'min' && this.min) {
                status = i < min;
            }
            if (range === 'max' && this.max) {
                status = i > max;
            }
            if (min > max) {
                status = false;
                status = min > i && i > max;
            }
        }
        this._disabledHours[i] = status;
        return status;
    }
    _rangeMinute(index, range) {
        let status = false;
        if (!this._showHours) {
            if (range === 'min' && this.min) {
                const isSameHour = this._min.h === this._selectedTime.h;
                const value = index < Number(this._min.m);
                status = value && isSameHour;
            }
            else if (range === 'max' && this.max) {
                const isSameHour = this._max.h === this._selectedTime.h;
                const value = index > Number(this._max.m);
                status = value && isSameHour;
            }
        }
        if (this.twelveHour) {
            const min = this._min && Number(this._to24(this._min).h);
            const max = this._max && Number(this._to24(this._max).h);
            const i = Number(this._to24(this._selectedTime).h);
            if (range === 'min' && min) {
                status = i === min && index < Number(this._min.m);
            }
            else if (range === 'max' && max) {
                status = i === max && index > Number(this._max.m);
            }
            status = status || this._disabledHours[i];
        }
        return status;
    }
    _setMinuteDigitalDisabled() {
        const { h } = this._to24(this._selectedTime);
        this._minuteDigitalDisabled = this._disabledHours[Number(h)];
    }
}
MdbTimePickerContentComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: MdbTimePickerContentComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: i1.FocusMonitor }, { token: i0.ElementRef }, { token: i0.Renderer2 }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Component });
MdbTimePickerContentComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.2.7", type: MdbTimePickerContentComponent, selector: "mdb-timepicker-content", viewQueries: [{ propertyName: "plate", first: true, predicate: ["plate"], descendants: true }, { propertyName: "hand", first: true, predicate: ["hand"], descendants: true }, { propertyName: "fg", first: true, predicate: ["fg"], descendants: true }, { propertyName: "bg", first: true, predicate: ["bg"], descendants: true }, { propertyName: "focus", first: true, predicate: ["focus"], descendants: true }, { propertyName: "digitalMinute", first: true, predicate: ["digitalMinute"], descendants: true }], ngImport: i0, template: "<div class=\"mdb-timepicker-modal\" cdkTrapFocus>\n  <!-- HEADER -->\n  <div class=\"mdb-timepicker-header\">\n    <!-- TIME -->\n    <div class=\"mdb-timepicker-time\">\n      <span\n        (click)=\"_showHoursClock()\"\n        (keydown.arrowdown)=\"_arrowChangeHour($any($event).key)\"\n        (keydown.arrowup)=\"_arrowChangeHour($any($event).key)\"\n        (keydown.enter)=\"_showHoursClock()\"\n        [ngClass]=\"{ active: _showHours }\"\n        class=\"hour-digital\"\n        #focus\n        tabindex=\"0\"\n      >\n        {{ _selectedTime.h }}</span\n      >:<span\n        (click)=\"_showMinutesClock()\"\n        (keydown.arrowdown)=\"_arrowChangeMinute($any($event).key)\"\n        (keydown.arrowup)=\"_arrowChangeMinute($any($event).key)\"\n        (keydown.enter)=\"_showMinutesClock()\"\n        [ngClass]=\"{ 'active': !_showHours, 'disabled': _minuteDigitalDisabled }\"\n        class=\"minute-digital\"\n        #digitalMinute\n        tabindex=\"0\"\n        >{{ _selectedTime.m }}</span\n      >\n    </div>\n    <div class=\"mdb-timepicker-ampm\" *ngIf=\"twelveHour\">\n      <span\n        (click)=\"_setAmPm('AM')\"\n        (keydown.enter)=\"_setAmPm('AM')\"\n        [ngClass]=\"{ active: _selectedTime.ampm === 'AM' }\"\n        tabindex=\"0\"\n        >AM</span\n      >\n      <span\n        (click)=\"_setAmPm('PM')\"\n        (keydown.enter)=\"_setAmPm('PM')\"\n        [ngClass]=\"{ active: _selectedTime.ampm === 'PM' }\"\n        tabindex=\"0\"\n        >PM</span\n      >\n    </div>\n  </div>\n  <!-- /Header -->\n  <!-- Body -->\n  <div class=\"mdb-timepicker-body\">\n    <div class=\"mdb-timepicker-plate\" #plate>\n      <div class=\"mdb-timepicker-canvas\">\n        <svg class=\"mdb-timepicker-svg\" width=\"270\" height=\"270\" #svg>\n          <g transform=\"translate(135,135)\" #g>\n            <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"-90\" #hand></line>\n            <circle class=\"mdb-timepicker-canvas-fg\" r=\"5\" cx=\"0\" cy=\"-110\" #fg></circle>\n            <circle class=\"mdb-timepicker-canvas-bg\" r=\"20\" cx=\"0\" cy=\"-110\" #bg></circle>\n            <circle class=\"mdb-timepicker-canvas-bearing\" cx=\"0\" cy=\"0\" r=\"2\" #bearing></circle>\n          </g>\n        </svg>\n      </div>\n\n      <div\n        [ngClass]=\"{ 'mdb-timepicker-dial-out': !_showHours }\"\n        [ngStyle]=\"{ visibility: !_showHours ? 'hidden' : 'visible' }\"\n        #hoursPlate\n        class=\"mdb-timepicker-dial mdb-timepicker-hours\"\n      >\n        <div\n          [ngClass]=\"{ disabled: tick.disabled }\"\n          [ngStyle]=\"{ left: tick.left + 'px', top: tick.top + 'px' }\"\n          *ngFor=\"let tick of _hoursTicks\"\n          class=\"mdb-timepicker-tick\"\n          id=\"{{ tick.hour }}\"\n          style=\"font-size: 140%;\"\n        >\n          {{ tick.hour }}\n        </div>\n      </div>\n      <div\n        [ngClass]=\"{ 'mdb-timepicker-dial-out': _showHours }\"\n        [ngStyle]=\"{ visibility: _showHours ? 'hidden' : 'visible' }\"\n        #minutesPlate\n        class=\"mdb-timepicker-dial mdb-timepicker-minutes\"\n      >\n        <div\n          [ngClass]=\"{ disabled: tick.disabled }\"\n          [ngStyle]=\"{ left: tick.left + 'px', top: tick.top + 'px' }\"\n          *ngFor=\"let tick of _minutesTicks\"\n          class=\"mdb-timepicker-tick\"\n          style=\"font-size: 120%;\"\n        >\n          {{ tick.min }}\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- /Boody -->\n  <!-- Footer -->\n  <div class=\"mdb-timepicker-footer\">\n    <button\n      (click)=\"_clearBtnClicked()\"\n      *ngIf=\"clearButton\"\n      class=\"mdb-timepicker-btn mdb-timepicker-clear\"\n      mdbWavesEffect\n      type=\"button\"\n    >\n      {{ clearButton }}\n    </button>\n    <button\n      (click)=\"_closeBtnClicked()\"\n      *ngIf=\"closeButton\"\n      class=\"mdb-timepicker-btn mdb-timepicker-close\"\n      mdbWavesEffect\n      type=\"button\"\n    >\n      {{ closeButton }}\n    </button>\n    <button\n      (click)=\"_okBtnClicked()\"\n      [ngClass]=\"{ disabled: _okButtonDisabled }\"\n      class=\"mdb-timepicker-btn mdb-timepicker-ok\"\n      mdbWavesEffect\n      type=\"button\"\n    >\n      {{ okButton }}\n    </button>\n  </div>\n  <!-- /Footer -->\n</div>\n", styles: ["@keyframes pulse{0%{transform:scaleZ(1)}50%{transform:scale3d(1.1,1.1,1.1)}to{transform:scaleZ(1)}}.disabled{cursor:default;opacity:.5}.mdb-timepicker-modal{min-width:328px;background-color:#fff;box-shadow:#0003 0 11px 15px -7px,#00000024 0 24px 38px 3px,#0000001f 0 9px 46px 8px;background:#fff;display:table-cell;vertical-align:middle}@media (min-height: 28.875em){.mdb-timepicker-modal{display:block;border:1px solid #777777;border-top-color:#898989;border-bottom-width:0;border-radius:5px 5px 0 0;box-shadow:0 .75rem 2.25rem 1rem #0000003d}}.mdb-timepicker-header{height:120px;box-sizing:border-box;background-color:#4285f4;padding:24px;display:flex;align-items:center;justify-content:center;color:#ffffff8c}.mdb-timepicker-time{font-size:70px;color:#ffffffa6}.mdb-timepicker-ampm{margin-left:15px;font-size:18px;display:flex;flex-direction:column;justify-content:space-around;height:100%}span{cursor:pointer}span.active{color:#fff}.mdb-timepicker-tick{border-radius:50%;color:#666;line-height:2.5rem;text-align:center;width:2.5rem;height:2.5rem;position:absolute;cursor:pointer;transition:background-color .3s;background-color:#00968800;transition:.3s}.mdb-timepicker-tick:hover{background-color:#00968840}.mdb-timepicker-footer{display:flex;justify-content:flex-end;width:100%;padding:12px}.mdb-timepicker-btn{padding:6px 8px;text-transform:uppercase;background:transparent;border:0;border-radius:4px;min-width:64px;transition:.3s}.mdb-timepicker-btn:not(.mdb-timepicker-btn.mdb-timepicker-clear){margin-left:8px}.mdb-timepicker-btn.mdb-timepicker-clear{margin-right:auto}.mdb-timepicker-btn:hover{background-color:#00968840}.mdb-timepicker-plate{background-color:#eee;border-radius:50%;width:270px;height:270px;overflow:visible;position:relative;margin:20px auto auto;-webkit-user-select:none;user-select:none}.mdb-timepicker-plate .mdb-timepicker-minutes{visibility:hidden}.mdb-timepicker-plate .mdb-timepicker-dial-out{opacity:0}.mdb-timepicker-plate .mdb-timepicker-hours.mdb-timepicker-dial-out{transform:scale(1.2)}.mdb-timepicker-plate .mdb-timepicker-minutes.mdb-timepicker-dial-out{transform:scale(.8)}.mdb-timepicker-canvas,.mdb-timepicker-dial{width:270px;height:270px;position:absolute;left:-1px;top:-1px}.mdb-timepicker-dial{transition:transform .35s,opacity .35s}.mdb-timepicker-dial .mdb-timepicker-tick{border-radius:50%;color:#666;line-height:2.5rem;text-align:center;width:40px;height:40px;position:absolute;cursor:pointer;transition:background-color .3s;background-color:#00968800}.mdb-timepicker-dial .mdb-timepicker-tick.active,.mdb-timepicker-dial .mdb-timepicker-tick:hover{background-color:#00968840}.mdb-timepicker-canvas{transition:opacity .3s}.mdb-timepicker-canvas line{stroke:#00968840;stroke-width:1}.mdb-timepicker-canvas-out{opacity:.25}.mdb-timepicker-canvas-bearing{stroke:none;fill:#004d40bf}.mdb-timepicker-canvas-fg{stroke:none;fill:#004d4000}.mdb-timepicker-canvas-fg.active{fill:#004d4080}.mdb-timepicker-canvas-bg{stroke:none;fill:#00968840}.mdb-timepicker-canvas-bg-trans{fill:#00968840}\n"], directives: [{ type: i1.CdkTrapFocus, selector: "[cdkTrapFocus]", inputs: ["cdkTrapFocus", "cdkTrapFocusAutoCapture"], exportAs: ["cdkTrapFocus"] }, { type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i3.WavesDirective, selector: "[mdbWavesEffect]" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: MdbTimePickerContentComponent, decorators: [{
            type: Component,
            args: [{ selector: 'mdb-timepicker-content', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: "<div class=\"mdb-timepicker-modal\" cdkTrapFocus>\n  <!-- HEADER -->\n  <div class=\"mdb-timepicker-header\">\n    <!-- TIME -->\n    <div class=\"mdb-timepicker-time\">\n      <span\n        (click)=\"_showHoursClock()\"\n        (keydown.arrowdown)=\"_arrowChangeHour($any($event).key)\"\n        (keydown.arrowup)=\"_arrowChangeHour($any($event).key)\"\n        (keydown.enter)=\"_showHoursClock()\"\n        [ngClass]=\"{ active: _showHours }\"\n        class=\"hour-digital\"\n        #focus\n        tabindex=\"0\"\n      >\n        {{ _selectedTime.h }}</span\n      >:<span\n        (click)=\"_showMinutesClock()\"\n        (keydown.arrowdown)=\"_arrowChangeMinute($any($event).key)\"\n        (keydown.arrowup)=\"_arrowChangeMinute($any($event).key)\"\n        (keydown.enter)=\"_showMinutesClock()\"\n        [ngClass]=\"{ 'active': !_showHours, 'disabled': _minuteDigitalDisabled }\"\n        class=\"minute-digital\"\n        #digitalMinute\n        tabindex=\"0\"\n        >{{ _selectedTime.m }}</span\n      >\n    </div>\n    <div class=\"mdb-timepicker-ampm\" *ngIf=\"twelveHour\">\n      <span\n        (click)=\"_setAmPm('AM')\"\n        (keydown.enter)=\"_setAmPm('AM')\"\n        [ngClass]=\"{ active: _selectedTime.ampm === 'AM' }\"\n        tabindex=\"0\"\n        >AM</span\n      >\n      <span\n        (click)=\"_setAmPm('PM')\"\n        (keydown.enter)=\"_setAmPm('PM')\"\n        [ngClass]=\"{ active: _selectedTime.ampm === 'PM' }\"\n        tabindex=\"0\"\n        >PM</span\n      >\n    </div>\n  </div>\n  <!-- /Header -->\n  <!-- Body -->\n  <div class=\"mdb-timepicker-body\">\n    <div class=\"mdb-timepicker-plate\" #plate>\n      <div class=\"mdb-timepicker-canvas\">\n        <svg class=\"mdb-timepicker-svg\" width=\"270\" height=\"270\" #svg>\n          <g transform=\"translate(135,135)\" #g>\n            <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"-90\" #hand></line>\n            <circle class=\"mdb-timepicker-canvas-fg\" r=\"5\" cx=\"0\" cy=\"-110\" #fg></circle>\n            <circle class=\"mdb-timepicker-canvas-bg\" r=\"20\" cx=\"0\" cy=\"-110\" #bg></circle>\n            <circle class=\"mdb-timepicker-canvas-bearing\" cx=\"0\" cy=\"0\" r=\"2\" #bearing></circle>\n          </g>\n        </svg>\n      </div>\n\n      <div\n        [ngClass]=\"{ 'mdb-timepicker-dial-out': !_showHours }\"\n        [ngStyle]=\"{ visibility: !_showHours ? 'hidden' : 'visible' }\"\n        #hoursPlate\n        class=\"mdb-timepicker-dial mdb-timepicker-hours\"\n      >\n        <div\n          [ngClass]=\"{ disabled: tick.disabled }\"\n          [ngStyle]=\"{ left: tick.left + 'px', top: tick.top + 'px' }\"\n          *ngFor=\"let tick of _hoursTicks\"\n          class=\"mdb-timepicker-tick\"\n          id=\"{{ tick.hour }}\"\n          style=\"font-size: 140%;\"\n        >\n          {{ tick.hour }}\n        </div>\n      </div>\n      <div\n        [ngClass]=\"{ 'mdb-timepicker-dial-out': _showHours }\"\n        [ngStyle]=\"{ visibility: _showHours ? 'hidden' : 'visible' }\"\n        #minutesPlate\n        class=\"mdb-timepicker-dial mdb-timepicker-minutes\"\n      >\n        <div\n          [ngClass]=\"{ disabled: tick.disabled }\"\n          [ngStyle]=\"{ left: tick.left + 'px', top: tick.top + 'px' }\"\n          *ngFor=\"let tick of _minutesTicks\"\n          class=\"mdb-timepicker-tick\"\n          style=\"font-size: 120%;\"\n        >\n          {{ tick.min }}\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- /Boody -->\n  <!-- Footer -->\n  <div class=\"mdb-timepicker-footer\">\n    <button\n      (click)=\"_clearBtnClicked()\"\n      *ngIf=\"clearButton\"\n      class=\"mdb-timepicker-btn mdb-timepicker-clear\"\n      mdbWavesEffect\n      type=\"button\"\n    >\n      {{ clearButton }}\n    </button>\n    <button\n      (click)=\"_closeBtnClicked()\"\n      *ngIf=\"closeButton\"\n      class=\"mdb-timepicker-btn mdb-timepicker-close\"\n      mdbWavesEffect\n      type=\"button\"\n    >\n      {{ closeButton }}\n    </button>\n    <button\n      (click)=\"_okBtnClicked()\"\n      [ngClass]=\"{ disabled: _okButtonDisabled }\"\n      class=\"mdb-timepicker-btn mdb-timepicker-ok\"\n      mdbWavesEffect\n      type=\"button\"\n    >\n      {{ okButton }}\n    </button>\n  </div>\n  <!-- /Footer -->\n</div>\n", styles: ["@keyframes pulse{0%{transform:scaleZ(1)}50%{transform:scale3d(1.1,1.1,1.1)}to{transform:scaleZ(1)}}.disabled{cursor:default;opacity:.5}.mdb-timepicker-modal{min-width:328px;background-color:#fff;box-shadow:#0003 0 11px 15px -7px,#00000024 0 24px 38px 3px,#0000001f 0 9px 46px 8px;background:#fff;display:table-cell;vertical-align:middle}@media (min-height: 28.875em){.mdb-timepicker-modal{display:block;border:1px solid #777777;border-top-color:#898989;border-bottom-width:0;border-radius:5px 5px 0 0;box-shadow:0 .75rem 2.25rem 1rem #0000003d}}.mdb-timepicker-header{height:120px;box-sizing:border-box;background-color:#4285f4;padding:24px;display:flex;align-items:center;justify-content:center;color:#ffffff8c}.mdb-timepicker-time{font-size:70px;color:#ffffffa6}.mdb-timepicker-ampm{margin-left:15px;font-size:18px;display:flex;flex-direction:column;justify-content:space-around;height:100%}span{cursor:pointer}span.active{color:#fff}.mdb-timepicker-tick{border-radius:50%;color:#666;line-height:2.5rem;text-align:center;width:2.5rem;height:2.5rem;position:absolute;cursor:pointer;transition:background-color .3s;background-color:#00968800;transition:.3s}.mdb-timepicker-tick:hover{background-color:#00968840}.mdb-timepicker-footer{display:flex;justify-content:flex-end;width:100%;padding:12px}.mdb-timepicker-btn{padding:6px 8px;text-transform:uppercase;background:transparent;border:0;border-radius:4px;min-width:64px;transition:.3s}.mdb-timepicker-btn:not(.mdb-timepicker-btn.mdb-timepicker-clear){margin-left:8px}.mdb-timepicker-btn.mdb-timepicker-clear{margin-right:auto}.mdb-timepicker-btn:hover{background-color:#00968840}.mdb-timepicker-plate{background-color:#eee;border-radius:50%;width:270px;height:270px;overflow:visible;position:relative;margin:20px auto auto;-webkit-user-select:none;user-select:none}.mdb-timepicker-plate .mdb-timepicker-minutes{visibility:hidden}.mdb-timepicker-plate .mdb-timepicker-dial-out{opacity:0}.mdb-timepicker-plate .mdb-timepicker-hours.mdb-timepicker-dial-out{transform:scale(1.2)}.mdb-timepicker-plate .mdb-timepicker-minutes.mdb-timepicker-dial-out{transform:scale(.8)}.mdb-timepicker-canvas,.mdb-timepicker-dial{width:270px;height:270px;position:absolute;left:-1px;top:-1px}.mdb-timepicker-dial{transition:transform .35s,opacity .35s}.mdb-timepicker-dial .mdb-timepicker-tick{border-radius:50%;color:#666;line-height:2.5rem;text-align:center;width:40px;height:40px;position:absolute;cursor:pointer;transition:background-color .3s;background-color:#00968800}.mdb-timepicker-dial .mdb-timepicker-tick.active,.mdb-timepicker-dial .mdb-timepicker-tick:hover{background-color:#00968840}.mdb-timepicker-canvas{transition:opacity .3s}.mdb-timepicker-canvas line{stroke:#00968840;stroke-width:1}.mdb-timepicker-canvas-out{opacity:.25}.mdb-timepicker-canvas-bearing{stroke:none;fill:#004d40bf}.mdb-timepicker-canvas-fg{stroke:none;fill:#004d4000}.mdb-timepicker-canvas-fg.active{fill:#004d4080}.mdb-timepicker-canvas-bg{stroke:none;fill:#00968840}.mdb-timepicker-canvas-bg-trans{fill:#00968840}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: i1.FocusMonitor }, { type: i0.ElementRef }, { type: i0.Renderer2 }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [DOCUMENT]
                }] }]; }, propDecorators: { plate: [{
                type: ViewChild,
                args: ['plate', { static: false }]
            }], hand: [{
                type: ViewChild,
                args: ['hand', { static: false }]
            }], fg: [{
                type: ViewChild,
                args: ['fg', { static: false }]
            }], bg: [{
                type: ViewChild,
                args: ['bg', { static: false }]
            }], focus: [{
                type: ViewChild,
                args: ['focus', { static: false }]
            }], digitalMinute: [{
                type: ViewChild,
                args: ['digitalMinute', { static: false }]
            }] } });
//# sourceMappingURL=data:application/json;base64,